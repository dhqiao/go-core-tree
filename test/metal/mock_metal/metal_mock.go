// Code generated by MockGen. DO NOT EDIT.
// Source: metal.go

// Package mock_metal is a generated GoMock package.
package mock_metal

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockImetal is a mock of Imetal interface
type MockImetal struct {
	ctrl     *gomock.Controller
	recorder *MockImetalMockRecorder
}

// MockImetalMockRecorder is the mock recorder for MockImetal
type MockImetalMockRecorder struct {
	mock *MockImetal
}

// NewMockImetal creates a new mock instance
func NewMockImetal(ctrl *gomock.Controller) *MockImetal {
	mock := &MockImetal{ctrl: ctrl}
	mock.recorder = &MockImetalMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockImetal) EXPECT() *MockImetalMockRecorder {
	return m.recorder
}

// GetName mocks base method
func (m *MockImetal) GetName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetName indicates an expected call of GetName
func (mr *MockImetalMockRecorder) GetName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetName", reflect.TypeOf((*MockImetal)(nil).GetName))
}

// SetName mocks base method
func (m *MockImetal) SetName(arg0 string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetName", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// SetName indicates an expected call of SetName
func (mr *MockImetalMockRecorder) SetName(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetName", reflect.TypeOf((*MockImetal)(nil).SetName), arg0)
}
